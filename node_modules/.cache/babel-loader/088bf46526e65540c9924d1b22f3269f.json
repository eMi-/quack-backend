{"ast":null,"code":"var _jsxFileName = \"C:\\\\Temp\\\\Quack\\\\ui\\\\src\\\\src\\\\testcases\\\\TestCases.js\";\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport SubComponent from \"../common/SubComponent\";\nimport TestCaseForm from \"../testcases/TestCaseForm\";\nimport TestCasesFilter from \"../testcases/TestCasesFilter\";\nimport TestCase from \"../testcases/TestCase\";\nimport $ from \"jquery\";\nimport qs from \"qs\";\nimport * as Utils from \"../common/Utils\";\nimport { FadeLoader } from \"react-spinners\";\nimport Backend from \"../services/backend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar jQuery = require(\"jquery\");\nwindow.jQuery = jQuery;\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\nrequire(\"gijgo/js/gijgo.min.js\");\nrequire(\"gijgo/css/gijgo.min.css\");\nclass TestCases extends SubComponent {\n  constructor(props) {\n    super(props);\n    this.defaultTestcase = {\n      id: null,\n      name: \"\",\n      description: \"\",\n      steps: [],\n      attributes: {}\n    };\n    this.testCasesFetchLimit = 50;\n    this.state = {\n      testcasesTree: {\n        children: []\n      },\n      testcaseToEdit: Object.assign({}, this.defaultTestcase, {\n        attributes: {},\n        steps: []\n      }),\n      projectAttributes: [],\n      selectedTestCase: {},\n      filter: {\n        includedFields: \"id,name,attributes,importedName,automated\",\n        notFields: {\n          id: []\n        }\n      },\n      loading: true,\n      showCasesSelectCheckboxes: false\n    };\n    this.onFilter = this.onFilter.bind(this);\n    this.refreshTree = this.refreshTree.bind(this);\n    this.getQueryParams = this.getQueryParams.bind(this);\n    this.getFilterQParams = this.getFilterQParams.bind(this);\n    this.getGroupingQParams = this.getGroupingQParams.bind(this);\n    this.onTestcaseSelected = this.onTestcaseSelected.bind(this);\n    this.onTestCaseAdded = this.onTestCaseAdded.bind(this);\n    this.loadMoreTestCases = this.loadMoreTestCases.bind(this);\n    this.showLoadMore = this.showLoadMore.bind(this);\n    this.updateCount = this.updateCount.bind(this);\n    this.processElementChecked = this.processElementChecked.bind(this);\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    var params = qs.parse(this.props.location.search.substring(1));\n    if (params.testcase) {\n      this.state.selectedTestCase = {\n        id: params.testcase\n      };\n      this.setState(this.state);\n    }\n    if (params.testSuite) {\n      this.state.testSuite = {\n        id: params.testSuite\n      };\n      this.setState(this.state);\n    }\n    Backend.get(this.props.match.params.project + \"/attribute\").then(response => {\n      this.state.projectAttributes = response.sort((a, b) => (a.name || \"\").localeCompare(b.name));\n      this.state.projectAttributes.unshift({\n        id: \"broken\",\n        name: \"Broken\",\n        values: [\"True\", \"False\"]\n      });\n      this.setState(this.state);\n      this.refreshTree();\n    }).catch(error => {\n      Utils.onErrorMessage(\"Couldn't fetch attributes: \", error);\n    });\n  }\n  editTestcase(testcaseId) {\n    this.state.testcaseToEdit = this.state.testcases.find(function (testcase) {\n      return testcaseId === testcase.id;\n    }) || {};\n    this.setState(this.state);\n    $(\"#editTestcase\").modal(\"toggle\");\n  }\n  onTestCaseAdded(testcase) {\n    this.state.testcaseToEdit = Object.assign({}, this.defaultTestcase, {\n      attributes: {},\n      steps: []\n    });\n    this.onFilter(this.state.filter, function () {\n      this.onTestcaseSelected(testcase.id);\n      this.refreshTree();\n    }.bind(this));\n    $(\"#editTestcase\").modal(\"hide\");\n  }\n  onFilter(filter, onResponse) {\n    var params = qs.parse(this.props.location.search.substring(1));\n    if (params.testcase) {\n      this.state.selectedTestCase = {\n        id: params.testcase\n      };\n    }\n    if (!filter.groups || filter.groups.length == 0) {\n      filter.skip = filter.skip || 0;\n      filter.limit = this.testCasesFetchLimit;\n    }\n    filter.includedFields = filter.includedFields || [];\n    filter.includedFields.push(\"name\");\n    filter.includedFields.push(\"id\");\n    filter.includedFields.push(\"attributes\");\n    filter.notFields = filter.notFields || {};\n    filter.notFields.id = filter.notFields.id || [];\n    this.state.filter = filter;\n    this.state.loading = true;\n    this.setState(this.state);\n    Backend.get(this.props.match.params.project + \"/testcase/tree?\" + this.getFilterApiRequestParams(filter)).then(response => {\n      this.state.testcasesTree = response;\n      this.state.loading = false;\n      this.setState(this.state);\n      this.refreshTree();\n      if (onResponse) {\n        onResponse();\n      }\n      this.updateCount();\n    }).catch(error => {\n      Utils.onErrorMessage(\"Couldn't fetch testcases tree: \", error);\n      this.state.loading = false;\n      this.setState(this.state);\n    });\n    if (!params.testSuite) {\n      this.props.history.push(\"/\" + this.props.match.params.project + \"/testcases?\" + this.getQueryParams(filter));\n    }\n  }\n  updateCount() {\n    Backend.get(this.props.match.params.project + \"/testcase/count?\" + this.getFilterApiRequestParams(this.state.filter)).then(response => {\n      this.state.count = response;\n      this.setState(this.state);\n    }).catch(error => {\n      Utils.onErrorMessage(\"Couldn't fetch testcases number: \", error);\n    });\n  }\n  loadMoreTestCases(event) {\n    this.state.filter.skip = (this.state.filter.skip || 0) + this.testCasesFetchLimit;\n    Backend.get(this.props.match.params.project + \"/testcase?\" + this.getFilterApiRequestParams(this.state.filter)).then(response => {\n      if (response) {\n        this.state.testcasesTree.testCases = this.state.testcasesTree.testCases.concat(response);\n        this.setState(this.state);\n        this.refreshTree();\n      } else {\n        this.state.filter.skip = (this.state.filter.skip || 0) - this.testCasesFetchLimit;\n        this.setState(this.state);\n      }\n    }).catch(error => {\n      Utils.onErrorMessage(\"Couldn't fetch testcases: \", error);\n    });\n    event.preventDefault();\n  }\n  getFilterApiRequestParams(filter) {\n    var tokens = (filter.groups || []).map(function (group) {\n      return \"groups=\" + group;\n    });\n    filter.filters.forEach(function (filter) {\n      filter.attrValues.forEach(function (attrValue) {\n        if (filter.id == \"broken\" && attrValue.value && attrValue.value != \"\") {\n          tokens.push(filter.id + \"=\" + attrValue.value);\n        } else {\n          tokens.push(\"attributes.\" + filter.id + \"=\" + attrValue.value);\n        }\n      });\n    });\n    if ((filter.groups || []).length > 0) {\n      filter.skip = 0;\n      filter.limit = 0;\n    }\n    if (filter.skip) {\n      tokens.push(\"skip=\" + filter.skip);\n    }\n    if (filter.limit) {\n      tokens.push(\"limit=\" + filter.limit);\n    }\n    if (filter.fulltext && filter.fulltext != \"\") {\n      tokens.push(\"fulltext=\" + filter.fulltext);\n    }\n    return tokens.join(\"&\");\n  }\n  onTestcaseSelected(id) {\n    this.state.selectedTestCase = Utils.getTestCaseFromTree(id, this.state.testcasesTree, function (testCase, id) {\n      return testCase.id === id;\n    });\n    this.props.history.push(\"/\" + this.props.match.params.project + \"/testcases?\" + this.getQueryParams(this.state.filter));\n    this.setState(this.state);\n  }\n  refreshTree() {\n    if (this.tree) {\n      this.tree.destroy();\n    }\n    this.tree = $(\"#tree\").tree({\n      primaryKey: \"id\",\n      uiLibrary: \"bootstrap4\",\n      checkboxes: true,\n      checkedField: \"checked\",\n      dataSource: Utils.parseTree(this.state.testcasesTree, this.state.filter.notFields.id)\n    });\n    this.tree.on(\"select\", function (e, node, id) {\n      this.onTestcaseSelected(id);\n    }.bind(this));\n    this.tree.on(\"checkboxChange\", function (e, $node, record, state) {\n      if (state === \"indeterminate\") return;\n      this.processElementChecked(record, state === \"checked\");\n      this.setState(this.state);\n    }.bind(this));\n    if (this.state.selectedTestCase.id) {\n      var node = this.tree.getNodeById(this.state.selectedTestCase.id);\n      if (!node) return;\n      this.tree.select(node);\n      this.state.filter.groups.forEach(function (groupId) {\n        var attributes = Utils.getTestCaseFromTree(this.state.selectedTestCase.id, this.state.testcasesTree, function (testCase, id) {\n          return testCase.id === id;\n        }).attributes || {};\n        var values = attributes[groupId] || [\"None\"];\n        values.forEach(function (value) {\n          var node = this.tree.getNodeById(groupId + \":\" + value);\n          this.tree.expand(node);\n        }.bind(this));\n      }.bind(this));\n    }\n  }\n  processElementChecked(element, isChecked) {\n    if (element.isLeaf) {\n      if (isChecked) {\n        this.state.filter.notFields.id = this.state.filter.notFields.id.filter(e => e !== element.id);\n      } else if (!this.state.filter.notFields.id.includes(element.id)) {\n        this.state.filter.notFields.id.push(element.id);\n      }\n    }\n    (element.children || []).forEach(e => this.processElementChecked(e, isChecked));\n  }\n  getQueryParams(filter) {\n    var testcaseIdAttr = \"\";\n    if (this.state.selectedTestCase && this.state.selectedTestCase.id) {\n      testcaseIdAttr = \"testcase=\" + this.state.selectedTestCase.id;\n    }\n    var urlParts = [this.getFilterQParams(filter), this.getGroupingQParams(filter), testcaseIdAttr, this.getFulltextQParams(filter)];\n    if (this.state.testSuite) {\n      urlParts.push(\"testSuite=\" + this.state.testSuite.id);\n    }\n    return urlParts.filter(function (val) {\n      return val !== \"\";\n    }).join(\"&\");\n  }\n  getFulltextQParams(filter) {\n    if (!filter.fulltext || filter.fulltext == \"\") return \"\";\n    return \"fulltext=\" + filter.fulltext;\n  }\n  getFilterQParams(filter) {\n    var activeFilters = filter.filters.filter(function (filter) {\n      return filter.id;\n    }) || [];\n    var attributesPairs = [];\n    activeFilters.forEach(function (filter) {\n      var tokens = filter.attrValues.map(function (attrValue) {\n        return \"attribute=\" + filter.id + \":\" + attrValue.value;\n      });\n      attributesPairs = attributesPairs.concat(tokens);\n    });\n    return attributesPairs.join(\"&\") || \"\";\n  }\n  getGroupingQParams(filter) {\n    return filter.groups.map(function (group) {\n      return \"groups=\" + group;\n    }).join(\"&\") || \"\";\n  }\n  showLoadMore() {\n    if (((this.state.filter || {}).groups || []).length > 0 || !this.state.count) {\n      return false;\n    }\n    return ((this.state.filter || {}).skip || 0) + this.testCasesFetchLimit <= this.state.count;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TestCasesFilter, {\n          projectAttributes: this.state.projectAttributes,\n          onFilter: this.onFilter,\n          project: this.props.match.params.project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal fade\",\n          id: \"editTestcase\",\n          tabIndex: \"-1\",\n          role: \"dialog\",\n          \"aria-labelledby\": \"editTestcaseLabel\",\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(TestCaseForm, {\n            project: this.props.match.params.project,\n            testcase: this.state.testcaseToEdit,\n            projectAttributes: this.state.projectAttributes,\n            onTestCaseAdded: this.onTestCaseAdded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sweet-loading\",\n          children: /*#__PURE__*/_jsxDEV(FadeLoader, {\n            sizeUnit: \"px\",\n            size: 100,\n            color: \"#135f38\",\n            loading: this.state.loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-side col-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"tree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), this.showLoadMore() && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              onClick: this.loadMoreTestCases,\n              children: \"Load more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"testCase\",\n          className: \"testcase-side col-7\",\n          children: this.state.selectedTestCase && this.state.selectedTestCase.id && /*#__PURE__*/_jsxDEV(TestCase, {\n            projectId: this.props.match.params.project,\n            projectAttributes: this.state.projectAttributes,\n            testcaseId: this.state.selectedTestCase.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TestCases;","map":{"version":3,"names":["React","SubComponent","TestCaseForm","TestCasesFilter","TestCase","$","qs","Utils","FadeLoader","Backend","jsxDEV","_jsxDEV","jQuery","require","window","global","TestCases","constructor","props","defaultTestcase","id","name","description","steps","attributes","testCasesFetchLimit","state","testcasesTree","children","testcaseToEdit","Object","assign","projectAttributes","selectedTestCase","filter","includedFields","notFields","loading","showCasesSelectCheckboxes","onFilter","bind","refreshTree","getQueryParams","getFilterQParams","getGroupingQParams","onTestcaseSelected","onTestCaseAdded","loadMoreTestCases","showLoadMore","updateCount","processElementChecked","componentDidMount","params","parse","location","search","substring","testcase","setState","testSuite","get","match","project","then","response","sort","a","b","localeCompare","unshift","values","catch","error","onErrorMessage","editTestcase","testcaseId","testcases","find","modal","onResponse","groups","length","skip","limit","push","getFilterApiRequestParams","history","count","event","testCases","concat","preventDefault","tokens","map","group","filters","forEach","attrValues","attrValue","value","fulltext","join","getTestCaseFromTree","testCase","tree","destroy","primaryKey","uiLibrary","checkboxes","checkedField","dataSource","parseTree","on","e","node","$node","record","getNodeById","select","groupId","expand","element","isChecked","isLeaf","includes","testcaseIdAttr","urlParts","getFulltextQParams","val","activeFilters","attributesPairs","render","fileName","_jsxFileName","lineNumber","columnNumber","className","tabIndex","role","sizeUnit","size","color","href","onClick","projectId"],"sources":["C:/Temp/Quack/ui/src/src/testcases/TestCases.js"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport SubComponent from \"../common/SubComponent\";\nimport TestCaseForm from \"../testcases/TestCaseForm\";\nimport TestCasesFilter from \"../testcases/TestCasesFilter\";\nimport TestCase from \"../testcases/TestCase\";\nimport $ from \"jquery\";\nimport qs from \"qs\";\nimport * as Utils from \"../common/Utils\";\nimport { FadeLoader } from \"react-spinners\";\nimport Backend from \"../services/backend\";\n\nvar jQuery = require(\"jquery\");\nwindow.jQuery = jQuery;\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\n\nrequire(\"gijgo/js/gijgo.min.js\");\nrequire(\"gijgo/css/gijgo.min.css\");\n\nclass TestCases extends SubComponent {\n  defaultTestcase = {\n    id: null,\n    name: \"\",\n    description: \"\",\n    steps: [],\n    attributes: {},\n  };\n\n  testCasesFetchLimit = 50;\n\n  state = {\n    testcasesTree: { children: [] },\n    testcaseToEdit: Object.assign({}, this.defaultTestcase, { attributes: {}, steps: [] }),\n    projectAttributes: [],\n    selectedTestCase: {},\n    filter: {\n      includedFields: \"id,name,attributes,importedName,automated\",\n      notFields: { id: [] },\n    },\n    loading: true,\n    showCasesSelectCheckboxes: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onFilter = this.onFilter.bind(this);\n    this.refreshTree = this.refreshTree.bind(this);\n    this.getQueryParams = this.getQueryParams.bind(this);\n    this.getFilterQParams = this.getFilterQParams.bind(this);\n    this.getGroupingQParams = this.getGroupingQParams.bind(this);\n    this.onTestcaseSelected = this.onTestcaseSelected.bind(this);\n    this.onTestCaseAdded = this.onTestCaseAdded.bind(this);\n    this.loadMoreTestCases = this.loadMoreTestCases.bind(this);\n    this.showLoadMore = this.showLoadMore.bind(this);\n    this.updateCount = this.updateCount.bind(this);\n    this.processElementChecked = this.processElementChecked.bind(this);\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    var params = qs.parse(this.props.location.search.substring(1));\n    if (params.testcase) {\n      this.state.selectedTestCase = { id: params.testcase };\n      this.setState(this.state);\n    }\n    if (params.testSuite) {\n      this.state.testSuite = {\n        id: params.testSuite,\n      };\n      this.setState(this.state);\n    }\n    Backend.get(this.props.match.params.project + \"/attribute\")\n      .then(response => {\n        this.state.projectAttributes = response.sort((a, b) => (a.name || \"\").localeCompare(b.name));\n        this.state.projectAttributes.unshift({\n          id: \"broken\",\n          name: \"Broken\",\n          values: [\"True\", \"False\"],\n        });\n        this.setState(this.state);\n        this.refreshTree();\n      })\n      .catch(error => {\n        Utils.onErrorMessage(\"Couldn't fetch attributes: \", error);\n      });\n  }\n\n  editTestcase(testcaseId) {\n    this.state.testcaseToEdit =\n      this.state.testcases.find(function (testcase) {\n        return testcaseId === testcase.id;\n      }) || {};\n    this.setState(this.state);\n    $(\"#editTestcase\").modal(\"toggle\");\n  }\n\n  onTestCaseAdded(testcase) {\n    this.state.testcaseToEdit = Object.assign({}, this.defaultTestcase, { attributes: {}, steps: [] });\n    this.onFilter(\n      this.state.filter,\n      function () {\n        this.onTestcaseSelected(testcase.id);\n        this.refreshTree();\n      }.bind(this),\n    );\n    $(\"#editTestcase\").modal(\"hide\");\n  }\n\n  onFilter(filter, onResponse) {\n    var params = qs.parse(this.props.location.search.substring(1));\n    if (params.testcase) {\n      this.state.selectedTestCase = { id: params.testcase };\n    }\n\n    if (!filter.groups || filter.groups.length == 0) {\n      filter.skip = filter.skip || 0;\n      filter.limit = this.testCasesFetchLimit;\n    }\n    filter.includedFields = filter.includedFields || [];\n    filter.includedFields.push(\"name\");\n    filter.includedFields.push(\"id\");\n    filter.includedFields.push(\"attributes\");\n\n    filter.notFields = filter.notFields || {};\n    filter.notFields.id = filter.notFields.id || [];\n\n    this.state.filter = filter;\n    this.state.loading = true;\n    this.setState(this.state);\n    Backend.get(this.props.match.params.project + \"/testcase/tree?\" + this.getFilterApiRequestParams(filter))\n      .then(response => {\n        this.state.testcasesTree = response;\n        this.state.loading = false;\n        this.setState(this.state);\n        this.refreshTree();\n        if (onResponse) {\n          onResponse();\n        }\n        this.updateCount();\n      })\n      .catch(error => {\n        Utils.onErrorMessage(\"Couldn't fetch testcases tree: \", error);\n        this.state.loading = false;\n        this.setState(this.state);\n      });\n    if (!params.testSuite) {\n      this.props.history.push(\"/\" + this.props.match.params.project + \"/testcases?\" + this.getQueryParams(filter));\n    }\n  }\n\n  updateCount() {\n    Backend.get(\n      this.props.match.params.project + \"/testcase/count?\" + this.getFilterApiRequestParams(this.state.filter),\n    )\n      .then(response => {\n        this.state.count = response;\n        this.setState(this.state);\n      })\n      .catch(error => {\n        Utils.onErrorMessage(\"Couldn't fetch testcases number: \", error);\n      });\n  }\n\n  loadMoreTestCases(event) {\n    this.state.filter.skip = (this.state.filter.skip || 0) + this.testCasesFetchLimit;\n    Backend.get(this.props.match.params.project + \"/testcase?\" + this.getFilterApiRequestParams(this.state.filter))\n      .then(response => {\n        if (response) {\n          this.state.testcasesTree.testCases = this.state.testcasesTree.testCases.concat(response);\n          this.setState(this.state);\n          this.refreshTree();\n        } else {\n          this.state.filter.skip = (this.state.filter.skip || 0) - this.testCasesFetchLimit;\n          this.setState(this.state);\n        }\n      })\n      .catch(error => {\n        Utils.onErrorMessage(\"Couldn't fetch testcases: \", error);\n      });\n    event.preventDefault();\n  }\n\n  getFilterApiRequestParams(filter) {\n    var tokens = (filter.groups || []).map(function (group) {\n      return \"groups=\" + group;\n    });\n    filter.filters.forEach(function (filter) {\n      filter.attrValues.forEach(function (attrValue) {\n        if (filter.id == \"broken\" && attrValue.value && attrValue.value != \"\") {\n          tokens.push(filter.id + \"=\" + attrValue.value);\n        } else {\n          tokens.push(\"attributes.\" + filter.id + \"=\" + attrValue.value);\n        }\n      });\n    });\n\n    if ((filter.groups || []).length > 0) {\n      filter.skip = 0;\n      filter.limit = 0;\n    }\n    if (filter.skip) {\n      tokens.push(\"skip=\" + filter.skip);\n    }\n    if (filter.limit) {\n      tokens.push(\"limit=\" + filter.limit);\n    }\n    if (filter.fulltext && filter.fulltext != \"\"){\n        tokens.push(\"fulltext=\" + filter.fulltext);\n    }\n    return tokens.join(\"&\");\n  }\n\n  onTestcaseSelected(id) {\n    this.state.selectedTestCase = Utils.getTestCaseFromTree(id, this.state.testcasesTree, function (testCase, id) {\n      return testCase.id === id;\n    });\n    this.props.history.push(\n      \"/\" + this.props.match.params.project + \"/testcases?\" + this.getQueryParams(this.state.filter),\n    );\n    this.setState(this.state);\n  }\n\n  refreshTree() {\n    if (this.tree) {\n      this.tree.destroy();\n    }\n    this.tree = $(\"#tree\").tree({\n      primaryKey: \"id\",\n      uiLibrary: \"bootstrap4\",\n      checkboxes: true,\n      checkedField: \"checked\",\n      dataSource: Utils.parseTree(this.state.testcasesTree, this.state.filter.notFields.id),\n    });\n    this.tree.on(\n      \"select\",\n      function (e, node, id) {\n        this.onTestcaseSelected(id);\n      }.bind(this),\n    );\n    this.tree.on(\n      \"checkboxChange\",\n      function (e, $node, record, state) {\n        if (state === \"indeterminate\") return;\n        this.processElementChecked(record, state === \"checked\");\n        this.setState(this.state);\n      }.bind(this),\n    );\n    if (this.state.selectedTestCase.id) {\n      var node = this.tree.getNodeById(this.state.selectedTestCase.id);\n      if (!node) return;\n      this.tree.select(node);\n      this.state.filter.groups.forEach(\n        function (groupId) {\n          var attributes =\n            Utils.getTestCaseFromTree(\n              this.state.selectedTestCase.id,\n              this.state.testcasesTree,\n              function (testCase, id) {\n                return testCase.id === id;\n              },\n            ).attributes || {};\n          var values = attributes[groupId] || [\"None\"];\n          values.forEach(\n            function (value) {\n              var node = this.tree.getNodeById(groupId + \":\" + value);\n              this.tree.expand(node);\n            }.bind(this),\n          );\n        }.bind(this),\n      );\n    }\n  }\n\n  processElementChecked(element, isChecked) {\n    if (element.isLeaf) {\n      if (isChecked) {\n        this.state.filter.notFields.id = this.state.filter.notFields.id.filter(e => e !== element.id);\n      } else if (!this.state.filter.notFields.id.includes(element.id)) {\n        this.state.filter.notFields.id.push(element.id);\n      }\n    }\n    (element.children || []).forEach(e => this.processElementChecked(e, isChecked));\n  }\n\n  getQueryParams(filter) {\n    var testcaseIdAttr = \"\";\n    if (this.state.selectedTestCase && this.state.selectedTestCase.id) {\n      testcaseIdAttr = \"testcase=\" + this.state.selectedTestCase.id;\n    }\n    var urlParts = [this.getFilterQParams(filter), this.getGroupingQParams(filter), testcaseIdAttr, this.getFulltextQParams(filter)];\n    if (this.state.testSuite) {\n      urlParts.push(\"testSuite=\" + this.state.testSuite.id);\n    }\n    return urlParts\n      .filter(function (val) {\n        return val !== \"\";\n      })\n      .join(\"&\");\n  }\n\n  getFulltextQParams(filter){\n    if (!filter.fulltext || filter.fulltext == \"\") return \"\";\n    return \"fulltext=\" + filter.fulltext;\n  }\n\n  getFilterQParams(filter) {\n    var activeFilters =\n      filter.filters.filter(function (filter) {\n        return filter.id;\n      }) || [];\n    var attributesPairs = [];\n    activeFilters.forEach(function (filter) {\n      var tokens = filter.attrValues.map(function (attrValue) {\n        return \"attribute=\" + filter.id + \":\" + attrValue.value;\n      });\n      attributesPairs = attributesPairs.concat(tokens);\n    });\n\n    return attributesPairs.join(\"&\") || \"\";\n  }\n\n  getGroupingQParams(filter) {\n    return (\n      filter.groups\n        .map(function (group) {\n          return \"groups=\" + group;\n        })\n        .join(\"&\") || \"\"\n    );\n  }\n\n  showLoadMore() {\n    if (((this.state.filter || {}).groups || []).length > 0 || !this.state.count) {\n      return false;\n    }\n    return ((this.state.filter || {}).skip || 0) + this.testCasesFetchLimit <= this.state.count;\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <TestCasesFilter\n            projectAttributes={this.state.projectAttributes}\n            onFilter={this.onFilter}\n            project={this.props.match.params.project}\n          />\n        </div>\n\n        <div>\n          <div\n            className=\"modal fade\"\n            id=\"editTestcase\"\n            tabIndex=\"-1\"\n            role=\"dialog\"\n            aria-labelledby=\"editTestcaseLabel\"\n            aria-hidden=\"true\"\n          >\n            <TestCaseForm\n              project={this.props.match.params.project}\n              testcase={this.state.testcaseToEdit}\n              projectAttributes={this.state.projectAttributes}\n              onTestCaseAdded={this.onTestCaseAdded}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"sweet-loading\">\n            <FadeLoader sizeUnit={\"px\"} size={100} color={\"#135f38\"} loading={this.state.loading} />\n          </div>\n          <div className=\"tree-side col-5\">\n            <div id=\"tree\"></div>\n            {this.showLoadMore() && (\n              <div>\n                <a href=\"\" onClick={this.loadMoreTestCases}>\n                  Load more\n                </a>\n              </div>\n            )}\n          </div>\n          <div id=\"testCase\" className=\"testcase-side col-7\">\n            {this.state.selectedTestCase && this.state.selectedTestCase.id && (\n              <TestCase\n                projectId={this.props.match.params.project}\n                projectAttributes={this.state.projectAttributes}\n                testcaseId={this.state.selectedTestCase.id}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TestCases;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}