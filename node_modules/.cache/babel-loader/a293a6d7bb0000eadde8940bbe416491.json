{"ast":null,"code":"var _jsxFileName = \"C:\\\\Temp\\\\Quack\\\\ui\\\\src\\\\src\\\\launches\\\\LaunchAttributeStatsChart.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport SubComponent from \"../common/SubComponent\";\nimport Highcharts from \"highcharts\";\nimport * as Utils from \"../common/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LaunchAttributeStatsChart extends SubComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      attrKey: \"\",\n      statusSeries: []\n    };\n    this.getChartContainerId = this.getChartContainerId.bind(this);\n    this.setUpStatusSeries = this.setUpStatusSeries.bind(this);\n    this.statusChartRender = this.statusChartRender.bind(this);\n    this.seriesConfig = Utils.getChartSeriesConfig();\n    this.state.data = props.stats;\n    this.state.attrKey = props.attrKey;\n  }\n  componentDidMount() {\n    this.setUpStatusSeries();\n    this.statusChartRender();\n  }\n  statusChartRender() {\n    Highcharts.chart({\n      chart: {\n        type: \"column\",\n        renderTo: this.getChartContainerId()\n      },\n      title: {\n        text: this.state.data.name\n      },\n      xAxis: {\n        categories: Object.keys(this.state.data.values)\n      },\n      yAxis: {\n        title: {\n          text: \"Testcases\"\n        }\n      },\n      plotOptions: {\n        column: {\n          stacking: \"normal\",\n          dataLabels: {\n            enabled: true,\n            formatter: function () {\n              if (this.y > 0) return this.y;\n            }\n          }\n        }\n      },\n      series: this.state.statusSeries\n    });\n  }\n  setUpStatusSeries() {\n    this.state.statusSeries = Object.keys(this.seriesConfig).map(statusKey => {\n      return {\n        name: statusKey,\n        color: this.seriesConfig[statusKey].color,\n        data: Object.keys(this.state.data.values).map(attrValue => {\n          return {\n            name: this.seriesConfig[statusKey].name,\n            y: this.state.data.values[attrValue][statusKey]\n          };\n        })\n      };\n    });\n  }\n  getChartContainerId() {\n    return \"launch-attr-stats-\" + this.state.attrKey;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.getChartContainerId(),\n      className: \"launch-attr-stats-chart\",\n      children: \"Chart here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default _c = withRouter(LaunchAttributeStatsChart);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","withRouter","SubComponent","Highcharts","Utils","jsxDEV","_jsxDEV","LaunchAttributeStatsChart","constructor","props","state","data","attrKey","statusSeries","getChartContainerId","bind","setUpStatusSeries","statusChartRender","seriesConfig","getChartSeriesConfig","stats","componentDidMount","chart","type","renderTo","title","text","name","xAxis","categories","Object","keys","values","yAxis","plotOptions","column","stacking","dataLabels","enabled","formatter","y","series","map","statusKey","color","attrValue","render","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Temp/Quack/ui/src/src/launches/LaunchAttributeStatsChart.js"],"sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport SubComponent from \"../common/SubComponent\";\nimport Highcharts from \"highcharts\";\nimport * as Utils from \"../common/Utils\";\n\nclass LaunchAttributeStatsChart extends SubComponent {\n  state = {\n    data: {},\n    attrKey: \"\",\n    statusSeries: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.getChartContainerId = this.getChartContainerId.bind(this);\n    this.setUpStatusSeries = this.setUpStatusSeries.bind(this);\n    this.statusChartRender = this.statusChartRender.bind(this);\n\n    this.seriesConfig = Utils.getChartSeriesConfig();\n\n    this.state.data = props.stats;\n    this.state.attrKey = props.attrKey;\n  }\n\n  componentDidMount() {\n    this.setUpStatusSeries();\n    this.statusChartRender();\n  }\n\n  statusChartRender() {\n    Highcharts.chart({\n      chart: {\n        type: \"column\",\n        renderTo: this.getChartContainerId(),\n      },\n      title: {\n        text: this.state.data.name,\n      },\n      xAxis: {\n        categories: Object.keys(this.state.data.values),\n      },\n      yAxis: {\n        title: {\n          text: \"Testcases\",\n        },\n      },\n      plotOptions: {\n        column: {\n          stacking: \"normal\",\n          dataLabels: {\n            enabled: true,\n            formatter: function () {\n              if (this.y > 0) return this.y;\n            },\n          },\n        },\n      },\n      series: this.state.statusSeries,\n    });\n  }\n\n  setUpStatusSeries() {\n    this.state.statusSeries = Object.keys(this.seriesConfig).map(statusKey => {\n      return {\n        name: statusKey,\n        color: this.seriesConfig[statusKey].color,\n        data: Object.keys(this.state.data.values).map(attrValue => {\n          return {\n            name: this.seriesConfig[statusKey].name,\n            y: this.state.data.values[attrValue][statusKey],\n          };\n        }),\n      };\n    });\n  }\n\n  getChartContainerId() {\n    return \"launch-attr-stats-\" + this.state.attrKey;\n  }\n\n  render() {\n    return (\n      <div id={this.getChartContainerId()} className=\"launch-attr-stats-chart\">\n        Chart here\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LaunchAttributeStatsChart);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}